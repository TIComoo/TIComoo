<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.7.4</version>
		<relativePath /> <!-- lookup parent from repository -->
	</parent>
	<groupId>g5</groupId>
	<artifactId>app</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>app</name>
	<description>Demo project for Spring Boot</description>
	<properties>
		<java.version>17</java.version>
		<sonar.organization>ticomoo</sonar.organization>
  		<sonar.host.url>https://sonarcloud.io</sonar.host.url>

	</properties>
	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-mongodb</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<!-- https://mvnrepository.com/artifact/junit/junit -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.13.2</version>
			<scope>test</scope>
		</dependency>
		
		<!-- https://mvnrepository.com/artifact/org.json/json -->
		<dependency>
			<groupId>org.json</groupId>
			<artifactId>json</artifactId>
			<version>20220924</version>
		</dependency>

	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<excludes>
						<exclude>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
						</exclude>
					</excludes>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.8.9-SNAPSHOT</version>
			</plugin>
			<plugin>
			    <groupId>org.jacoco</groupId>
			    <artifactId>jacoco-maven-plugin</artifactId>
			    <version>0.6.4</version>
			    <executions>
				<!--
				   Prepara la propiedad para que el agente JaCoCo runtime será pasado
				   como argumento VM cuando el plugin maven surefire sea ejecutado.
			       -->
				<execution>
				    <id>pre-unit-test</id>
				    <goals>
					<goal>prepare-agent</goal>
				    </goals>
				    <configuration>
					<!-- Establece el path al archivo el cual contiene los datos de la ejecución. -->
					<destFile>${project.build.directory}/coverage-reports/jacoco-ut.exec</destFile>
					<!--
					   Establece el nombre de la propiedad que contiene la configuracion del agente VM runtime JaCoCo.
				       -->
					<propertyName>surefireArgLine</propertyName>
				    </configuration>
				</execution>
				<!--
				   Asegura que el informe de cobertura de codigo para test unitarios es
				   creado después de ejecutar los test unitarios.
			       -->
				<execution>
				    <id>post-unit-test</id>
				    <phase>test</phase>
				    <goals>
					<goal>report</goal>
				    </goals>
				    <configuration>
					<!-- Establece el path del archivo que contiene los datos de ejecución. -->
					<dataFile>${project.build.directory}/coverage-reports/jacoco-ut.exec</dataFile>
					<!-- Establece el directorio de salida para los informes de cobertura. -->
					<outputDirectory>${project.reporting.outputDirectory}/jacoco-ut</outputDirectory>
				    </configuration>
				</execution>
			    </executions>
			</plugin>

			
		</plugins>
	<build>
	
</project>
